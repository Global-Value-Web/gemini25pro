name: Deploy Flask App

on:
  push:
    branches: [ "main" ]  # deploy only after merge

permissions:
  contents: read
  packages: write

jobs:
  build-and-deploy:
    runs-on: [self-hosted, Windows, X64]   #  use your runne

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: Global-Value-Web
          password: ${{ secrets.CR_PAT }}

 

      - name: Build and push Docker image
        run: |
          $IMAGE_NAME="ghcr.io/global-value-web/gemini25pro_app:latest"
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

      - name: Deploy on same server
        run: |
          $IMAGE_NAME="ghcr.io/global-value-web/gemini25pro_app:latest"
          docker pull $IMAGE_NAME
          # Stop container if it exists
          if (docker ps -a -q -f name=gemini25pro_app) {
             docker stop gemini25pro_app
             docker rm gemini25pro_app
          }
          # Define temp key path on Windows
          $keyPath = "$env:TEMP\gcp-key.json"
          # Write secret into temp file
          $env:GCP_SERVICE_ACCOUNT_KEY | Out-File -Encoding utf8 /tmp/gcp-key.json
          # Run container with credentials mounted + env var
          docker run -d --restart=always -p 8002:8002 `
           -v /tmp/gcp-key.json:/app/gcp-key.json `
           -e GOOGLE_APPLICATION_CREDENTIALS=/app/gcp-key.json `
           --name gemini25pro_app $IMAGE_NAME
        env:
          GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
